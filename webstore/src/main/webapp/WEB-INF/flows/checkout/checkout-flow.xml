<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/webflow
                     http://www.springframework.org/schema/webflow/spring-webflow.xsd">

   <var name="order" class="com.packt.webstore.domain.Order" />

   <action-state id="addCartToOrder">
      <evaluate expression="cartServiceImpl.validate(requestParameters.cartId)"
         result="order.cart" />
      <transition to="invalidCartWarning"
         on-exception="com.packt.webstore.exception.InvalidCartException" />
      <transition to="collectCustomerInfo" />
   </action-state>

   <view-state id="collectCustomerInfo" view="collectCustomerInfo.jsp" model="order">
      <transition on="customerInfoCollected" to="processOrderFinalPrice" />
   </view-state>

<!--    <view-state id="collectShippingDetail" model="order"> -->
<!--       <transition on="shippingDetailCollected" to="orderConfirmation" /> -->
<!--       <transition on="backToCollectCustomerInfo" to="collectCustomerInfo" /> -->
<!--    </view-state> -->

   <action-state id="processOrderFinalPrice">
   <on-entry>
      <evaluate expression="userServiceImpl.getUserPoint(order.username)" 
         result="order.pointOfOrder"/>
         </on-entry> 
   	<evaluate expression="orderServiceImpl.getFinalPrice(order.username,order.cart.grandTotal)" 
         result="order.finalPrice"/>
      <transition to ="orderConfirmation" />
   </action-state>

   <view-state id="orderConfirmation">
      <transition on="orderConfirmed" to="processOrder" />
      <transition on="backToCollectCustomerInfo" to="collectCustomerInfo" />
   </view-state>
   
   <action-state id="processOrder">
   <on-entry>
   	<evaluate expression="orderServiceImpl.saveOrder(order,externalContext.nativeRequest)" result="order.orderId"/>
   	</on-entry>
   	<evaluate expression="orderServiceImpl.getFinalPrice(order.username,order.cart.grandTotal)" 
         result="order.finalPrice"/> 
     <evaluate expression="orderServiceImpl.saveRewardPoint(order.username,order.cart.grandTotal)"/> 
     
      <transition to ="thankCustomer" />
   </action-state>
   
   <view-state id="invalidCartWarning">
      <transition to="endState"/>
   </view-state>
   
   <view-state id="thankCustomer" model="order">
      <transition to="endState"/>
   </view-state>

   <end-state id="endState"/>   

   <end-state id="cancelCheckout" view = "checkOutCancelled.jsp"/>      
   
   <global-transitions>
      <transition on = "cancel" to="cancelCheckout" />
   </global-transitions>
</flow>
